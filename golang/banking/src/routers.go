/*
 * Swagger banking api simulation - OpenAPI 3.0
 *
 * Banking simulation application
 *
 * API version: 1.0.11
 * Contact: apiteam@swagger.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package src

import (
	"net/http"

	"github.com/dopefresh/banking/golang/banking/src/handlers"
	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method string
	// Pattern is the pattern of the URI.
	Pattern string
	// HandlerFunc is the handler function of this route.
	HandlerFunc gin.HandlerFunc
}

// Routes is the list of the generated Route.
type Routes []Route

// NewRouter returns a new router.
func NewRouter() *gin.Engine {
	router := gin.Default()
	for _, route := range routes {
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Index is the index handler.
func Index(c *gin.Context) {
	c.String(http.StatusOK, "Hello World!")
}

var routes = Routes{
	{
		"Index",
		http.MethodGet,
		"/",
		Index,
	},

	{
		"AddCard",
		http.MethodPost,
		"/api/v1/cards",
		handlers.AddCard,
	},

	{
		"DeleteCard",
		http.MethodDelete,
		"/api/v1/cards/:number",
		handlers.DeleteCard,
	},

	{
		"GetCard",
		http.MethodGet,
		"/api/v1/cards/:number",
		handlers.GetCard,
	},

	{
		"UpdateCard",
		http.MethodPut,
		"/api/v1/cards/:number",
		handlers.UpdateCard,
	},

	{
		"AddClient",
		http.MethodPost,
		"/api/v1/clients",
		handlers.AddClient,
	},

	{
		"DepositMoney",
		http.MethodPost,
		"/api/v1/clients/deposit/",
		handlers.DepositMoney,
	},

	{
		"GetClient",
		http.MethodGet,
		"/api/v1/clients/:inn",
		handlers.GetClient,
	},

	{
		"GetJWT",
		http.MethodPost,
		"/api/v1/token/",
		handlers.GetJWT,
	},

	{
		"TransferMoney",
		http.MethodPost,
		"/api/v1/clients/transfer/",
		handlers.TransferMoney,
	},

	{
		"UpdateClient",
		http.MethodPut,
		"/api/v1/clients/:inn",
		handlers.UpdateClient,
	},

	{
		"WithdrawMoney",
		http.MethodPost,
		"/api/v1/clients/withdraw/",
		handlers.WithdrawMoney,
	},

	{
		"AddContract",
		http.MethodPost,
		"/api/v1/contracts/",
		handlers.AddContract,
	},

	{
		"GetContract",
		http.MethodGet,
		"/api/v1/contracts/:contractId",
		handlers.GetContract,
	},

	{
		"GetContracts",
		http.MethodGet,
		"/api/v1/contracts/",
		handlers.GetContracts,
	},

	{
		"AddCredit",
		http.MethodPost,
		"/api/v1/credits/",
		handlers.AddCredit,
	},

	{
		"GetCredit",
		http.MethodGet,
		"/api/v1/credits/:creditId",
		handlers.GetCredit,
	},

	{
		"GetCredits",
		http.MethodGet,
		"/api/v1/credits/",
		handlers.GetCredits,
	},

	{
		"GetPaymentSchedule",
		http.MethodGet,
		"/api/v1/credit/payment_schedules/:paymentScheduleId/",
		handlers.GetPaymentSchedule,
	},

	{
		"GetPaymentSchedules",
		http.MethodGet,
		"/api/v1/credit/payment_schedules/",
		handlers.GetPaymentSchedules,
	},

	{
		"GetTransaction",
		http.MethodGet,
		"/api/v1/transactions/:transactionId/",
		handlers.GetTransaction,
	},

	{
		"GetTransactions",
		http.MethodGet,
		"/api/v1/transactions/",
		handlers.GetTransactions,
	},
}
